'use strict'
const NearestNeighbors = require('nearest-neighbors')

/**
 * Initializes a machine for k-nearest-neighbors classification.
 *
 * @class
 * @classdesc A machine for k-nearest-neighbors classification.
 */
module.exports = class extends NearestNeighbors {
  constructor(nodes, features) {
    super(nodes, features)
  }
  /**
   * Classify an entity based on its neighbors.
   *
   * @param {Object} node
   * The node to find neighbors for and classify.
   * @param {Number} desiredNeighbors
   * The number of neighbors to find.
   * @param {String} key
   * The key to infer a value for.
   *
   * @return {String}
   * The infered classification.
   */
  classify(node, desiredNeighbors, key) {
    const types = {}
    this.getNearestNeighbors(node, desiredNeighbors).forEach(neighbor => {
      const typeKey = neighbor.neighbor[key]
      !types[typeKey] && (types[typeKey] = 0)
      types[typeKey] += 1 / (neighbor.distance || Number.EPSILON)
    })
    return Object.keys(types).sort((a, b) => types[b] - types[a])[0]
  }
}
